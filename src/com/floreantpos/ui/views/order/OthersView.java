/*
 * OthersView.java
 *
 * Created on August 23, 2006, 12:40 AM
 */

package com.floreantpos.ui.views.order;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;

import javax.swing.JDialog;
import javax.swing.JPanel;

import org.hibernate.Session;
import org.hibernate.Transaction;

import com.floreantpos.POSConstants;
import com.floreantpos.main.Application;
import com.floreantpos.model.MenuItem;
import com.floreantpos.model.ShopTable;
import com.floreantpos.model.Ticket;
import com.floreantpos.model.TicketItem;
import com.floreantpos.model.TicketType;
import com.floreantpos.model.dao.MenuItemDAO;
import com.floreantpos.model.dao.TicketDAO;
import com.floreantpos.swing.PosButton;
import com.floreantpos.ui.dialog.MiscTicketItemDialog;
import com.floreantpos.ui.dialog.NumberSelectionDialog2;
import com.floreantpos.ui.dialog.POSMessageDialog;
import com.floreantpos.ui.views.OrderInfoDialog;
import com.floreantpos.ui.views.OrderInfoView;
import com.floreantpos.ui.views.order.actions.ItemSelectionListener;
import com.floreantpos.util.PosGuiUtil;

/**
 *
 * @author  MShahriar
 */
public class OthersView extends JPanel {
	private Ticket currentTicket;
	private ItemSelectionListener itemSelectionListener;

	/** Creates new form OthersView */
	public OthersView() {
		initComponents();
	}

	public OthersView(ItemSelectionListener itemSelectionListener) {
		initComponents();

		setItemSelectionListener(itemSelectionListener);
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {

		buttonPanel = new JPanel();
		btnOrderInfo = new com.floreantpos.swing.PosButton();
		btnMisc = new com.floreantpos.swing.PosButton();
		btnCustomerNumber = new com.floreantpos.swing.PosButton();
		btnTableNumber = new com.floreantpos.swing.PosButton();

		setBorder(javax.swing.BorderFactory.createTitledBorder(null, "=", javax.swing.border.TitledBorder.CENTER,
				javax.swing.border.TitledBorder.DEFAULT_POSITION));
		setLayout(new BorderLayout());

		JPanel topPanel = new JPanel(new BorderLayout());
		topPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
		PosButton btnAddItem = new PosButton("SEARCH ITEM BY ID");
		topPanel.add(btnAddItem);
		add(topPanel, BorderLayout.NORTH);
		btnAddItem.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				searchItem();
			}
		});

		buttonPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
		buttonPanel.setLayout(new java.awt.GridLayout(1, 0, 5, 5));

		btnOrderInfo.setText(com.floreantpos.POSConstants.ORDER_INFO);
		btnOrderInfo.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				doViewOrderInfo();
			}
		});
		buttonPanel.add(btnOrderInfo);

		btnMisc.setText(com.floreantpos.POSConstants.MISC);
		btnMisc.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				doInsertMisc(evt);
			}
		});
		buttonPanel.add(btnMisc);

		btnCustomerNumber.setText(com.floreantpos.POSConstants.CUSTOMER);
		btnCustomerNumber.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnCustomerNumberActionPerformed(evt);
			}
		});
		buttonPanel.add(btnCustomerNumber);

		btnTableNumber.setText(com.floreantpos.POSConstants.TABLE);
		btnTableNumber.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTableNumberActionPerformed(evt);
			}
		});
		buttonPanel.add(btnTableNumber);

		add(buttonPanel);
	}// </editor-fold>//GEN-END:initComponents

	private void doInsertMisc(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doInsertMisc
		MiscTicketItemDialog dialog = new MiscTicketItemDialog(Application.getPosWindow(), true);
		dialog.open();
		if (!dialog.isCanceled()) {
			TicketItem ticketItem = dialog.getTicketItem();
			RootView.getInstance().getOrderView().getTicketView().addTicketItem(ticketItem);
		}
	}//GEN-LAST:event_doInsertMisc

	private void doViewOrderInfo() {//GEN-FIRST:event_btnOrderInfoActionPerformed
		try {
			Ticket ticket = getCurrentTicket();

			List<Ticket> tickets = new ArrayList<Ticket>();
			tickets.add(ticket);

			OrderInfoView view = new OrderInfoView(tickets);
			OrderInfoDialog dialog = new OrderInfoDialog(view);
			dialog.setSize(400, 600);
			dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
			dialog.setLocationRelativeTo(Application.getPosWindow());
			dialog.setVisible(true);

		} catch (Exception e) {
			// TODO: handle exception
		}
		//    	TicketDetailDialog dialog = new TicketDetailDialog(Application.getPosWindow(), true);
		//    	dialog.setTicket(getCurrentTicket());
		//    	dialog.open();
		//    	
		//    	if(!dialog.isCanceled()) {
		//    		OrderView.getInstance().getTicketView().updateView();
		//    	}

	}//GEN-LAST:event_btnOrderInfoActionPerformed

	private void btnCustomerNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCustomerNumberActionPerformed
		updateGuestNumber();
	}//GEN-LAST:event_btnCustomerNumberActionPerformed

	private void updateGuestNumber() {
		Ticket thisTicket = getCurrentTicket();
		int guestNumber = thisTicket.getNumberOfGuests();

		NumberSelectionDialog2 dialog = new NumberSelectionDialog2();
		dialog.setTitle(com.floreantpos.POSConstants.NUMBER_OF_GUESTS);
		dialog.setValue(guestNumber);
		dialog.pack();
		dialog.open();

		if (dialog.isCanceled()) {
			return;
		}

		guestNumber = (int) dialog.getValue();
		if (guestNumber == 0) {
			POSMessageDialog.showError(Application.getPosWindow(), com.floreantpos.POSConstants.GUEST_NUMBER_CANNOT_BE_0);
			return;
		}

		thisTicket.setNumberOfGuests(guestNumber);
		updateView();

	}

	private void btnTableNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTableNumberActionPerformed
		updateTableNumber();
	}//GEN-LAST:event_btnTableNumberActionPerformed

	private void updateTableNumber() {
		Session session = null;
		Transaction transaction = null;

		try {

			Ticket thisTicket = getCurrentTicket();

			List<ShopTable> tables = PosGuiUtil.captureTable();
			if (tables == null) {
				return;
			}

			session = TicketDAO.getInstance().getSession();
			transaction = session.beginTransaction();

			if (thisTicket.getTables() != null) {
				Set<ShopTable> oldTables = thisTicket.getTables();

				for (ShopTable shopTable : oldTables) {
					shopTable.setOccupied(false);
				}

				for (ShopTable shopTable : tables) {
					shopTable.setOccupied(true);
				}

				oldTables.retainAll(tables);
			}
			else {
				for (ShopTable shopTable : tables) {
					shopTable.setOccupied(true);
					thisTicket.addTotables(shopTable);
				}
			}
			
			session.saveOrUpdate(thisTicket);
			transaction.commit();

			updateView();

		} catch (Exception e) {
			transaction.rollback();
		}
	}

	private com.floreantpos.swing.PosButton btnCustomerNumber;
	private com.floreantpos.swing.PosButton btnMisc;
	private com.floreantpos.swing.PosButton btnOrderInfo;
	private com.floreantpos.swing.PosButton btnTableNumber;
	private JPanel buttonPanel;

	// End of variables declaration//GEN-END:variables

	public void updateView() {
		if (currentTicket != null) {
			if (currentTicket.getType() != TicketType.DINE_IN) {
				btnCustomerNumber.setText("");
				btnTableNumber.setText("");

				btnCustomerNumber.setEnabled(false);
				btnTableNumber.setEnabled(false);
			}
			else {
				btnCustomerNumber.setEnabled(true);
				btnTableNumber.setEnabled(true);

				btnCustomerNumber.setText(currentTicket.getNumberOfGuests() + " " + POSConstants.GUEST + "s");
				btnTableNumber.setText(POSConstants.RECEIPT_REPORT_TABLE_NO_LABEL + ": " + currentTicket.getTableNumbers());
			}
		}
	}

	public Ticket getCurrentTicket() {
		return currentTicket;
	}

	public void setCurrentTicket(Ticket currentTicket) {
		this.currentTicket = currentTicket;
		updateView();
	}

	public ItemSelectionListener getItemSelectionListener() {
		return itemSelectionListener;
	}

	public void setItemSelectionListener(ItemSelectionListener itemSelectionListener) {
		this.itemSelectionListener = itemSelectionListener;
	}

	public void searchItem() {
		int itemId = NumberSelectionDialog2.takeIntInput("Enter or scan item id");

		if (itemId == -1) {
			return;
		}

		MenuItem menuItem = MenuItemDAO.getInstance().get(itemId);
		if (menuItem == null) {
			POSMessageDialog.showError("Item not found");
			return;
		}
		itemSelectionListener.itemSelected(menuItem);
	}
}
